@model IEnumerable<BaristaHome.Models.Drink>



@*CINDIE*@

@*CSS styling for displaying the button and drinks*@
<style>

    @*CSS styling for the drink results*@
    .drink-pic{
        width: 200px;
        height: 200px;
    }
    
    .drink-pic-background{
        background-color: antiquewhite;
        box-shadow: 1px 1px 1px 0 rgba(0, 0, 0, 0.15);
        padding-top:5px;
        padding-bottom:5px;
        padding-left:5px;
        padding-right:5px;
        display: inline-block;
    }

    @*CSS styling for the back button*@
    .pink-button {
        background-color: pink;
        color: black;
        border: none;
        padding-top: 10px;
        padding-bottom: 10px;
        padding-left: 20px;
        padding-right: 20px;
        margin-bottom: 10px;
        box-shadow: 1px 1px 1px 0 rgba(0, 0, 0, 0.15);
        transition: background-color 0.15s, color 0.15s;
    }

    .pink-button:hover {
        background-color: lightpink;
        cursor: pointer;
    }

    .pink-button:active {
        background-color: rgba(219, 113, 152, 0.67);
    }

</style>

<button class="pink-button">
    <a asp-controller="Home" asp-action="Index">Back</a>
</button>

<p>Showing search results:</p>
@*ALEX*@
@*Display Drinks*@
<div class="drinks">
    @foreach (var item in Model)
    {
        <a asp-action="Drink" asp-route-id="@item.DrinkId" class="drink-item">
            @*Drink image*@
            <div class="drink-icon">
                @*Display default icon if drink has no image*@
                @if (item.DrinkImageData == null)
                {
                    <div class="drink-pic-background"> 
                        <img class="drink-pic" src="../images/calendar.png">
                        
                    </div>

                }
                else
                {@*If drink has a picture, then display that picture*@
                    <div class="drink-pic-background">
                        <img class="drink-pic" src="@Url.Action("RenderImage", new { id = item.DrinkId})" />
                    </div>
                        
                }
            </div>
            @*Drink Name*@
            <div class="drink-name">
                @Html.DisplayFor(modelItem => item.DrinkName)
            </div>
        </a>
    }

</div>
    

